#!/bin/bash
set -eux -o pipefail

if (($# != 2)) || [[ ! -d $1 ]] || [[ ! -d $2 ]]; then
 echo "expected arguments: [output directory] [sysroot]"
 exit 1
fi
OUT=$(realpath $1)
SYSROOT=$(realpath $2)
IMAGE=${OUT}/beans.img
MNT=${OUT}/mnt
LOADK=${OUT}/loadk
KERNEL=${OUT}/beans
INITRD=${OUT}/initrd.img
# 80mb of 512b blocks
SECTORS=163840
BLOCKSIZE=512
PARTITION_OFFSET_SECTORS=63
PARTITION_OFFSET_BYTES=$((${BLOCKSIZE}*${PARTITION_OFFSET_SECTORS}))
# 64 bytes for table + magic word
PARTITION_TABLE_OFFSET_BYTES=446
FAT32_BOOT_OFFSET_BYTES=90
# sits at start of partition, right after boot and fsinfo
LOADLOADK_OFFSET_SECTORS=$((${PARTITION_OFFSET_SECTORS}+2))

dd if=/dev/zero of=${IMAGE} count=${SECTORS} bs=${BLOCKSIZE}
# do partition
# -a=dos to start partition at sector 63 instead of 2048
(
echo "y"      # write new MBR and PT
echo "disk"   # edit current drive stats
echo          # default stats
echo "edit 1" # first pte
echo          # fat32 lba partition id (0c)
echo          # dont edit in chs mode
echo          # default partition offset (63)
echo          # default partition size (entire disk)
echo "flag 1" # mark first pte active
echo "write"  # mark first pte active
echo "quit"   # mark first pte active
) | fdisk -i -a dos -e ${IMAGE}

# do fat32
# hdiutil claims its output is stable :-)
DEVICE=$(hdiutil attach -nomount ${IMAGE} | grep "FAT_32" | cut -f1 - | cat | xargs)
set +x
read -p "fat32 on ${DEVICE} (y/n)? " choice
case "${choice}" in
  y|Y ) echo "cool";;
  n|N ) echo "ok"; exit 1;;
  * ) echo "what"; exit 1;;
esac
# this bit is noisy
set -x
diskutil eraseVolume FAT32 BEANSFS ${DEVICE}
# diskutil leaves it mounted
umount ${DEVICE}
mkdir ${MNT}
mount -t msdos ${DEVICE} ${MNT}
mkdir ${MNT}/boot
cp ${LOADK} ${MNT}/boot
cp ${KERNEL} ${MNT}/boot
cp ${INITRD} ${MNT}/boot
cp -r ${SYSROOT}/. ${MNT}
# dump sysroot
if command -v fd &> /dev/null; then
  fd --hidden . ${MNT}
else
  find ${MNT} -type f
fi
# todo: figure out how to disable fsevents for a volume. seems like even with
# mdutil off + .fseventsd/no_log, the directory is recreated after removing
# .fseventsd/no_log
umount ${DEVICE}
hdiutil detach ${DEVICE}
rm -r ${MNT}
# change partition id back to lba
# todo: this seems like a nit. or we could
# go back to newfs_msdos on fs image
# which can't do the overwrite
(
echo "edit 1" # first pte
echo "0c"     # fat32 lba partition id
echo          # dont edit in chs mode
echo          # default partition offset (63)
echo          # default partition size (entire disk)
echo "write"  # mark first pte active
echo "quit"   # mark first pte active
) | fdisk -a dos -e ${IMAGE}

# leave fdisk's partition table intact
dd if=${OUT}/mbr of=${IMAGE} bs=1 count=${PARTITION_TABLE_OFFSET_BYTES} conv=notrunc
# pluck (the skip) bootloader _code_ and plop (the seek) it down after bpb/ebpb
dd if=${OUT}/boot of=${IMAGE} bs=1 skip=${FAT32_BOOT_OFFSET_BYTES} seek=$((${PARTITION_OFFSET_BYTES}+${FAT32_BOOT_OFFSET_BYTES})) conv=notrunc
# loadloadk to third block of fat partition
dd if=${OUT}/loadloadk of=${IMAGE} bs=${BLOCKSIZE} seek=${LOADLOADK_OFFSET_SECTORS} conv=notrunc
file ${IMAGE}
